{"title":"aurora-评论工具","uid":"88a4b7145e2262a07558e70d9b4d3df2","slug":"aurora简解/aurora-评论工具","date":"2000-08-15T10:49:36.000Z","updated":"2023-01-13T01:56:04.554Z","comments":true,"path":"api/articles/aurora简解/aurora-评论工具.json","keywords":null,"cover":"/images/fengmian/23.jfif","content":"<h1 id=\"目前缺少部署评论工具\"><a href=\"#目前缺少部署评论工具\" class=\"headerlink\" title=\"目前缺少部署评论工具\"></a>目前缺少部署评论工具</h1><h3 id=\"评论工具部署\"><a href=\"#评论工具部署\" class=\"headerlink\" title=\"评论工具部署\"></a>评论工具部署</h3><p>GiTalk 基于 GitHub Issues ，并且GitTalk基于GitHub登录的无后台评论系统。</p>\n<p>See: <a href=\"https://github.com/gitalk/gitalk#options\">https://github.com/gitalk/gitalk#options</a></p>\n<p>使用gitalk其实很简单的，因为各大hexo主题都内置了gitalk的配置，包括aurora主题，因此简单地配置一下主题文件就能使用gitalk。主题的 _config.aurora.yml 里面我的评论配置情况如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gitalk:\n enable: <span class=\"token boolean\">true</span>\n autoExpand: <span class=\"token boolean\">true</span>\n clientID: <span class=\"token string\">'你创建应用的id'</span>\n clientSecret: <span class=\"token string\">'这是密钥'</span>\n repo: <span class=\"token string\">'你的仓库的名字(不是链接！！！！)'</span>\n owner: <span class=\"token string\">'LuiYang08'</span>\n admin: <span class=\"token punctuation\">[</span><span class=\"token string\">'LuiYang08'</span><span class=\"token punctuation\">]</span>\n id: uid\n language: cn\n distractionFreeMode: <span class=\"token boolean\">true</span>\n recentComment: <span class=\"token boolean\">true</span>\n proxy: <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"GitHub创建新的应用和仓库\"><a href=\"#GitHub创建新的应用和仓库\" class=\"headerlink\" title=\"GitHub创建新的应用和仓库\"></a>GitHub创建新的应用和仓库</h3><p>在GitHub中申请一个应用的演示如下：<br><img src=\"/images%5Cfengmian%5C2%5C1.png\"><br>点击new oauth app创建一个新的授权应用。<a href=\"https://github.com/settings/applications/new\">点击此处注册</a><br><img src=\"/images%5Cfengmian%5C2%5C2.png\"><br>1.Application name 应用名字随便写，自己分清就行。</p>\n<p>2.homepage url 是你仓库的链接，记住是链接，待会儿演示如何创建仓库并初始化issue。</p>\n<p>3.Application description 应用描述也是随便填，反正都是写给你自己看的。</p>\n<p>4.Authorization callback URL，这个授权回调url就是你自己的博客地址。</p>\n<p>填完之后，点击注册应用，你会得到clientID和clientSecret，这个填到配置文件即可。接下来演示创建仓库：<br><img src=\"/images%5Cfengmian%5C2%5C3.png\"><br>点击绿色按钮创建新的仓库<br>:::注意<br>然后重点来了，在创建仓库时，一定要选择public，不能是private，这个配置会影响gitalk的使用。然后在仓库的 settings 中点击 issue 的 set up templates ，再去issue下面发表一条评论即可<br><img src=\"/images%5Cfengmian%5C2%5C4.png\"><br>:::</p>\n","feature":true,"text":"目前缺少部署评论工具评论工具部署GiTalk 基于 GitHub Issues ，并且GitTalk基于GitHub登录的无后台评论系统。 See: https://github.com/gitalk/gitalk#options 使用gitalk其实很简单的，因为各大hexo主...","link":"","photos":[],"count_time":{"symbolsCount":911,"symbolsTime":"1 mins."},"categories":[{"name":"hexo-aurora简解","slug":"hexo-aurora简解","count":4,"path":"api/categories/hexo-aurora简解.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%89%8D%E7%BC%BA%E5%B0%91%E9%83%A8%E7%BD%B2%E8%AF%84%E8%AE%BA%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">目前缺少部署评论工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%84%E8%AE%BA%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">评论工具部署</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GitHub%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E5%BA%94%E7%94%A8%E5%92%8C%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">GitHub创建新的应用和仓库</span></a></li></ol></li></ol></li></ol>","author":{"name":"cui猫社","slug":"cui猫社","avatar":"/images/touxiang/6.jpg","link":"/","description":"<br />  <b>这B很懒</b><br />  <b>什么也没写</b>","socials":{}},"mapped":true,"prev_post":{"title":"第一篇记录","uid":"58dcfb1a301c3f8968f12252f713eef9","slug":"动态/星瑶屿梦/1","date":"2020-08-15T10:49:36.000Z","updated":"2023-01-13T00:37:00.481Z","comments":true,"path":"api/articles/动态/星瑶屿梦/1.json","keywords":null,"cover":"/images/shouye3342.jpg","text":"这里是小瑶瑶，这章文章也算是测试 ","link":"","photos":[],"count_time":{"symbolsCount":28,"symbolsTime":"1 mins."},"categories":[{"name":"动态","slug":"动态","count":2,"path":"api/categories/动态.json"}],"tags":[{"name":"星瑶屿梦的动态","slug":"星瑶屿梦的动态","count":1,"path":"api/tags/星瑶屿梦的动态.json"}],"author":{"name":"星瑶屿梦","slug":"星瑶屿梦","avatar":"https://sns-avatar-qc.xhscdn.com/avatar/63966797343f0b7ab7be8441.jpg?imageView2/1/w/540/format/jpg","link":"https://space.bilibili.com/24183831","description":"  <br />  <b>萌新V圈出道应该做什么</b> <br />  <a>梦瑶梦到自己在梦里梦游</a>","socials":{}},"feature":true},"next_post":{"title":"css设置与嵌入视频设置","uid":"4864d840e4d205ca6b2000c95f62e1a3","slug":"aurora简解/css设置与嵌入视频设置","date":"2000-08-15T10:49:36.000Z","updated":"2023-01-13T20:15:06.046Z","comments":true,"path":"api/articles/aurora简解/css设置与嵌入视频设置.json","keywords":null,"cover":"/images/fengmian/20.jfif","text":"hexo-aurora的CSS怎么设置首先我们要知道aurora的CSS设置与我们平时用的hexo创建的CSS有所不同比方我们要嵌入哔哩哔哩视频我们该怎么设置并让他读取到我们要设置的CSS呢？我们先找到我们想设置的CSS,例如我现在的这个嵌入哔哩哔哩视频适配CSS 哔哩哔哩视频适...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"hexo-aurora简解","slug":"hexo-aurora简解","count":4,"path":"api/categories/hexo-aurora简解.json"}],"tags":[],"author":{"name":"星瑶屿梦","slug":"星瑶屿梦","avatar":"https://sns-avatar-qc.xhscdn.com/avatar/63966797343f0b7ab7be8441.jpg?imageView2/1/w/540/format/jpg","link":"https://space.bilibili.com/24183831","description":"  <br />  <b>萌新V圈出道应该做什么</b> <br />  <a>梦瑶梦到自己在梦里梦游</a>","socials":{}}}}